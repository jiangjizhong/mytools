
call plug#begin('~/.vim/plugged')

Plug 'altercation/vim-colors-solarized'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'preservim/nerdtree'
Plug 'tomtom/tcomment_vim'
Plug 'elzr/vim-json'
Plug 'dense-analysis/ale'
Plug 'vim-scripts/yaml.vim'
Plug 'majutsushi/tagbar'
Plug 'christoomey/vim-tmux-navigator'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
"Plug 'bling/vim-bufferline'
Plug 'simeji/winresizer'
"Plug 'Yggdroot/indentLine'
"Plug 'tell-k/vim-autopep8'

call plug#end()


"tags
set tags=./.tags;,.tags

"color and font
if has("gui_running")
    set background=dark
    colorscheme solarized
    set guifont=Monaco:h15
else
    set background=dark
    set t_Co=256
    let g:solarized_visibility = "high"
    let g:solarized_contrast = "high"
    let g:solarized_termcolors=16
    colorscheme solarized
endif

"common configuration
set hlsearch
set incsearch
set number
set autoindent
set smartindent
set showcmd
set ruler

set smarttab
set tabstop=4
set shiftwidth=4
set expandtab
set encoding=utf-8
set fileencodings=utf-8,gbk,ucs-bom,cp936,iso-8859-1
set vb t_vb= "disable beeping

"for gui
set guioptions-=m
set guioptions-=T
set guioptions-=L 

nnoremap <Leader>p :set paste<CR>
nnoremap <Leader>v :vsplit<CR>
nnoremap <Leader>s :split<CR>
nnoremap <C-n> :tabnext<CR>
nnoremap <C-b> :tabprevious<CR>

"shortcut for switch split
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

set backspace=indent,eol,start


"for yaml
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

"clang
let g:clang_complete_auto = 1
let g:clang_use_library = 1
let g:clang_debug = 1

"json
autocmd BufRead,BufNewFile *.json nnoremap <Leader>j :%!python -m json.tool<CR>

"tag list
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1

"nerdtree
let g:NERDTreeChDirMode       = 2
let g:NERDTreeMapOpenInTab = '\r'
nnoremap <Leader>nt :NERDTree<CR>
nnoremap <Leader>ntf :NERDTreeFind<CR>

"ctrlp
let g:ctrlp_working_path_mode = 0

"resize
"press Ctrl-E to resize the window
let g:winresizer_vert_resize=2
let g:winresizer_horiz_resize=1

"ale
let g:ale_sign_error = '>>'
let g:ale_sign_warning = '--'
let g:ale_fixers = { 
\    'python': ['isort', 'reorder-python-imports', 'yapf'] 
\}

let g:ale_linters = {'python': ['pylint']}

nnoremap <Leader>f :ALEFix<CR>

"indentLine

